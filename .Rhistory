else {
plot <- stat_function(fun = dnorm, args = list(mean = n_mean,
sd = n_sd))
}
plots_for_n_value <- c(plots_for_n_value, plot)
}
plot_df <- cbind(plot_df, tibble(plots_for_n_value))
}
plot_df <- data.frame(c())
for(i in 1:4) {
value <- data.frame(all_data[i])
plots_for_n_value <- c()
for(j in 1:3) {
n_mean <- value[j, 1]
n_sd <- value[j, 2]
if(j == 3) {
plot <- stat_function(fun = dexp, args = list(mean = n_mean,
sd = n_sd))
}
else {
plot <- stat_function(fun = dnorm, args = list(mean = n_mean,
sd = n_sd))
}
plots_for_n_value <- c(plots_for_n_value, plot)
}
plot_df <- cbind(plot_df, tibble(plots_for_n_value))
}
plot_df <- data.frame(c(1,2,3))
for(i in 1:4) {
value <- data.frame(all_data[i])
plots_for_n_value <- c()
for(j in 1:3) {
n_mean <- value[j, 1]
n_sd <- value[j, 2]
if(j == 3) {
plot <- stat_function(fun = dexp, args = list(mean = n_mean,
sd = n_sd))
}
else {
plot <- stat_function(fun = dnorm, args = list(mean = n_mean,
sd = n_sd))
}
plots_for_n_value <- c(plots_for_n_value, plot)
}
plot_df <- cbind(plot_df, tibble(plots_for_n_value))
}
plot_df
plot_df <- data.frame(c(1,2,3))
for(i in 1:4) {
value <- data.frame(all_data[i])
plots_for_n_value <- c()
for(j in 1:3) {
n_mean <- value[j, 1]
n_sd <- value[j, 2]
if(j == 3) {
plot <- stat_function(fun = dexp, args = list(mean = n_mean,
sd = n_sd))
}
else {
plot <- stat_function(fun = dnorm, args = list(mean = n_mean,
sd = n_sd))
}
plots_for_n_value <- c(plots_for_n_value, plot)
}
plot_df <- cbind(plot_df, tibble(plots_for_n_value))
}
plot_df
ggplot(data.frame(x = c(-10, 20)), aes(x)) +
for(i in 1:3) {
stat_function(fun = dnorm, args = list(mean = 1,
sd = i))
}
ggplot(data.frame(x = c(-10, 20)), aes(x)) +
for(i in 1:3) {
stat_function(fun = dnorm, args = list(mean = 1,
sd = i)) +
}
plot_df
plot_df <- plot_df[,2:5]
plot_df
plot_df <- data.frame(c(1,2,3))
for(i in 1:4) {
value <- data.frame(all_data[i])
plots_for_n_value <- c()
for(j in 1:3) {
n_mean <- value[j, 1]
n_sd <- value[j, 2]
if(j == 3) {
plot <- stat_function(fun = dexp, args = list(mean = n_mean,
sd = n_sd))
}
else {
plot <- stat_function(fun = dnorm, args = list(mean = n_mean,
sd = n_sd))
}
plots_for_n_value <- c(plots_for_n_value, plot)
}
column_name <- paste0("N = ", 10^i)
plot_df <- cbind(plot_df, column_name = tibble(plots_for_n_value))
}
plot_df
plot_df <- data.frame(c(1,2,3))
for(i in 1:4) {
value <- data.frame(all_data[i])
plots_for_n_value <- c()
for(j in 1:3) {
n_mean <- value[j, 1]
n_sd <- value[j, 2]
if(j == 3) {
plot <- stat_function(fun = dexp, args = list(mean = n_mean,
sd = n_sd))
}
else {
plot <- stat_function(fun = dnorm, args = list(mean = n_mean,
sd = n_sd))
}
plots_for_n_value <- c(plots_for_n_value, plot)
}
column_name <- paste0("N = ", 10^i)
plot_df <- cbind(plot_df, tibble(column_name = plots_for_n_value))
}
plot_df
plot_df <- data.frame(c(1,2,3))
for(i in 1:4) {
value <- data.frame(all_data[i])
plots_for_n_value <- c()
for(j in 1:3) {
n_mean <- value[j, 1]
n_sd <- value[j, 2]
if(j == 3) {
plot <- stat_function(fun = dexp, args = list(mean = n_mean,
sd = n_sd))
}
else {
plot <- stat_function(fun = dnorm, args = list(mean = n_mean,
sd = n_sd))
}
plots_for_n_value <- c(plots_for_n_value, plot)
}
plot_df <- cbind(plot_df, tibble(plots_for_n_value))
}
plot_df <- plot_df[,2:5]
plot_df
rownames(plot_df) <- c("beta0", "beta1", "e")
colnames(plot_df) <- c("N=1", "N=10", "N=100", "N=1000")
plot_df
try <- c(plot_df[1,1], plot_df[1,2], plot_df[1,3], plot_df[1,4])
ggplot(data.frame(x = c(-10, 20)), aes(x)) +
try
try <- c(plot_df[1,1])
ggplot(data.frame(x = c(-10, 20)), aes(x)) +
try
ggplot(data.frame(x = c(-10, 20)), aes(x)) +
try
try <- c(plot_df[1,1], plot_df[1,2], plot_df[1,3], plot_df[1,4])
ggplot(data.frame(x = c(-1, 2)), aes(x)) +
try
ggplot(data.frame(x = c(0, 1)), aes(x)) +
try
ggplot(data.frame(x = c(0.25, .75)), aes(x)) +
try
all_data
ggplot(data.frame(x = c(0.25, .75)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0.5422113,
sd = NA))
ggplot(data.frame(x = c(0.25, .75)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0.5422113,
sd = 0))
ggplot(data.frame(x = c(0.25, .75)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0.5422113,
sd = 1))
ggplot(data.frame(x = c(0, 1)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0.5422113,
sd = 1))
all_data
ggplot(data.frame(x = c(0, 1)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0.5422113,
sd = .1))
ggplot(data.frame(x = c(0, 1)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0.5422113,
sd = .000000001))
ggplot(data.frame(x = c(0, 1)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0.5422113,
sd = 0))
ggplot(data.frame(x = c(0, 1)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0.5422113,
sd = 0)) +
stat_function(fun = dnorm, args = list(mean = 0.5054950,
sd = 0)) +
stat_function(fun = dnorm, args = list(mean = 0.5155113,
sd = 0.021478893)) +
stat_function(fun = dnorm, args = list(mean = 0.5006823,
sd = 0.02529167))
ggplot(data.frame(x = c(0, 1)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0.5422113,
sd = 0), aes(color="red")) +
stat_function(fun = dnorm, args = list(mean = 0.5054950,
sd = 0)) +
stat_function(fun = dnorm, args = list(mean = 0.5155113,
sd = 0.021478893)) +
stat_function(fun = dnorm, args = list(mean = 0.5006823,
sd = 0.02529167))
ggplot(data.frame(x = c(0, 1)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0.5422113,
sd = 0), aes(color="red")) +
stat_function(fun = dnorm, args = list(mean = 0.5054950,
sd = 0), aes(color="blue")) +
stat_function(fun = dnorm, args = list(mean = 0.5155113,
sd = 0.021478893), aes(color="green")) +
stat_function(fun = dnorm, args = list(mean = 0.5006823,
sd = 0.02529167), aes(color="yellow"))
ggplot(data.frame(x = c(0, 1)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 1.0084398,
sd = 0), aes(color="red")) +
stat_function(fun = dnorm, args = list(mean = 0.9760736,
sd = 0), aes(color="blue")) +
stat_function(fun = dnorm, args = list(mean = 0.9840600,
sd = 0.017123187), aes(color="green")) +
stat_function(fun = dnorm, args = list(mean = 0.9989267,
sd = 0.02289928), aes(color="yellow"))
ggplot(data.frame(x = c(0.75, 2)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 1.0084398,
sd = 0), aes(color="red")) +
stat_function(fun = dnorm, args = list(mean = 0.9760736,
sd = 0), aes(color="blue")) +
stat_function(fun = dnorm, args = list(mean = 0.9840600,
sd = 0.017123187), aes(color="green")) +
stat_function(fun = dnorm, args = list(mean = 0.9989267,
sd = 0.02289928), aes(color="yellow"))
ggplot(data.frame(x = c(0.75, 1.2)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 1.0084398,
sd = 0), aes(color="red")) +
stat_function(fun = dnorm, args = list(mean = 0.9760736,
sd = 0), aes(color="blue")) +
stat_function(fun = dnorm, args = list(mean = 0.9840600,
sd = 0.017123187), aes(color="green")) +
stat_function(fun = dnorm, args = list(mean = 0.9989267,
sd = 0.02289928), aes(color="yellow"))
ggplot(data.frame(x = c(0.75, 1.2)), aes(x)) +
stat_function(fun = dexp, args = list(mean = 1.0084398,
sd = 0), aes(color="red")) +
stat_function(fun = dexp, args = list(mean = 0.9760736,
sd = 0), aes(color="blue")) +
stat_function(fun = dexp, args = list(mean = 0.9840600,
sd = 0.017123187), aes(color="green")) +
stat_function(fun = dexp, args = list(mean = 0.9989267,
sd = 0.02289928), aes(color="yellow"))
ggplot(aes(x = xx ,y= y)) +
geom_point()
xy <- tibble(y, xx)
ggplot(xy, aes(x = xx ,y= y)) +
geom_point()
ggplot(xy, aes(x = xx ,y= y)) +
geom_point() +
geom_smooth(method="lm")
ggplot(xy, aes(x = xx ,y= y)) +
geom_point() +
geom_smooth(method="lm") +
geom_line()
?geom_line
ggplot(xy, aes(x = xx ,y= y)) +
geom_point() +
# geom_smooth(method="lm") +
geom_line()
ggplot() +
geom_point(xy, aes(x = xx ,y= y)) +
# geom_smooth(method="lm") +
geom_line()
ggplot() +
geom_point(xy, aes(x = xx ,y= y)) +
# geom_smooth(method="lm") +
# geom_line()
?geom_line
ggplot(xy, aes(x = xx ,y= y)) +
geom_point() +
# geom_smooth(method="lm") +
geom_line()
all_data
ggplot(xy, aes(x = xx, y= y)) +
geom_point() +
# geom_smooth(method="lm") +
geom_line(aes( y = 0.5006823 + 0.9989267*y))
ggplot(xy, aes(x = xx, y= y)) +
geom_point() +
# geom_smooth(method="lm") +
geom_line(aes( y = 0.5006823 + 0.9989267*xx))
ggplot(xy, aes(x = xx, y= y)) +
geom_point() +
geom_smooth(method="lm") +
geom_line(aes( y = 0.5006823 + 0.9989267*xx))
ggplot(xy, aes(x = xx, y= y)) +
geom_point() +
geom_smooth(method="lm", aes(color = "blue")) +
geom_line(aes( y = 0.5006823 + 0.9989267*xx))
ggplot(xy, aes(x = xx, y= y)) +
geom_point() +
geom_smooth(method="lm", aes(color = "blue")) +
geom_line(aes(y = 0.5006823 + 0.9989267*xx, color = "red"))
ggplot(xy, aes(x = xx, y= y)) +
geom_point() +
geom_smooth(method="lm", aes(color = "blue", alpha = .25)) +
geom_line(aes(y = 0.5006823 + 0.9989267*xx, color = "red"))
ggplot(xy, aes(x = xx, y= y)) +
geom_point() +
geom_smooth(method="lm", aes(color = "blue", alpha = .25)) +
geom_line(aes(y = 0.5006823 + 0.9989267*xx, color = "red", alpha = .25))
?geom_smooth
ggplot(xy, aes(x = xx, y= y)) +
geom_point() +
geom_smooth(method="lm", aes(se = FALSE, color = "blue", alpha = .25)) +
geom_line(aes(y = 0.5006823 + 0.9989267*xx, color = "red", alpha = .25))
ggplot(xy, aes(x = xx, y= y)) +
geom_point() +
geom_smooth(method="lm", se = FALSE, aes(color = "blue", alpha = .25)) +
geom_line(aes(y = 0.5006823 + 0.9989267*xx, color = "red", alpha = .25))
all_data
0.6818441^.5
x = tibble(1, xx, xx^2)
x
xx <- seq(-1,2,length.out=N)
plot(xx,y,type="l")
x = tibble(1, xx, xx^2)
xy <- tibble(y, xx)
model_string <- "model{
for (i in 1:n) {
mu[i] <- inprod(x[i, ], beta)
y[i] ~ dnorm(mu[i], 1/(sig2^2))
}
for (j in 1:p) {
beta[j] ~ dnorm(0, 1/10)
}
sig ~ dexp(1)
}"
model_string <- "model{
for (i in 1:n) {
mu[i] <- inprod(x[i, ], beta)
y[i] ~ dnorm(mu[i], 1/(sig^2))
}
for (j in 1:p) {
beta[j] ~ dnorm(0, 1/10)
}
sig ~ dexp(1)
}"
model <- jags.model(textConnection(model_string),
data=list(y=y,
x=x,
n=dim(x)[1],
p=dim(x)[2]),
n.chains=1)
summary(coda.samples(model,
variable.names=c("beta", "sig"),
n.iter=10000,
thin=10))
all_data
N <- 1000
xx <- seq(-1,2,length.out=N)
y <- xx^2 + rnorm(N)*0.1 #variance is 0.01 so sd is 0.1; this is same as rnorm(N,sd=0.1)
plot(xx,y,type="l")
x = c(1, xx)
x = tibble(1, xx)
xy <- tibble(y, xx)
model_string <- "model{
for (i in 1:n) {
mu[i] <- inprod(x[i, ], beta)
y[i] ~ dnorm(mu[i], 1/(sig^2))
}
for (j in 1:p) {
beta[j] ~ dnorm(0, 1/10)
}
sig ~ dexp(1)
}"
model <- jags.model(textConnection(model_string),
data=list(y=y,
x=x,
n=dim(x)[1],
p=dim(x)[2]),
n.chains=1)
helper_get_beta_sigma_values <- function(n) {
return(summary(coda.samples(model,
variable.names=c("beta", "sig2"),
n.iter=n,
thin=10)))
}
all_data <- list()
for(i in 0:3) {
all_data[i+1] <- helper_get_beta_sigma_values(10^i)
}
summary(coda.samples(model,
variable.names=c("beta", "sig"),
n.iter=10000,
thin=10))
model_string <- "model{
for (i in 1:n) {
mu[i] <- inprod(x[i, ], beta)
y[i] ~ dnorm(mu[i], 1/(sig^2))
}
for (j in 1:p) {
beta[j] ~ dnorm(0, 1/10)
}
sig ~ dexp(1)
}"
model <- jags.model(textConnection(model_string),
data=list(y=y,
x=x,
n=dim(x)[1],
p=dim(x)[2]),
n.chains=1)
summary(coda.samples(model,
variable.names=c("beta", "sig"),
n.iter=10000,
thin=10))
xx <- seq(-1,2,length.out=N)
y <- xx^2 + rnorm(N)*0.1 #variance is 0.01 so sd is 0.1; this is same as rnorm(N,sd=0.1)
plot(xx,y,type="l")
x = tibble(1, xx, xx^2)
xy <- tibble(y, xx)
model_string <- "model{
for (i in 1:n) {
mu[i] <- inprod(x[i, ], beta)
y[i] ~ dnorm(mu[i], 1/(sig^2))
}
for (j in 1:p) {
beta[j] ~ dnorm(0, 1/10)
}
sig ~ dexp(1)
}"
model <- jags.model(textConnection(model_string),
data=list(y=y,
x=x,
n=dim(x)[1],
p=dim(x)[2]),
n.chains=1)
summary(coda.samples(model,
variable.names=c("beta", "sig"),
n.iter=10000,
thin=10))
ggplot(xy, aes(x = xx, y= y)) +
geom_point() +
geom_smooth(method="lm", se = FALSE, aes(color = "blue", alpha = .25)) +
geom_line(aes(y = 0.002183 + 0.008460*xx + 0.995067*xx^2, color = "red", alpha = .25))
ggplot(xy, aes(x = xx, y= y)) +
geom_point() +
# geom_smooth(method="lm", se = FALSE, aes(color = "blue", alpha = .25)) +
geom_line(aes(y = 0.002183 + 0.008460*xx + 0.995067*xx^2, color = "red", alpha = .25))
setwd("~/Desktop/DS/StandardDeviationR")
setwd("~/Desktop/DS/StandardDeviationR")
devtools::test()
devtools::test()
devtools::test()
sd(c(0:999999))
se(c(0:999999))
cler
devtools::test()
devtools::test()
devtools::test()
devtools::test()
setwd("~/Desktop/DS/DSCI_524_lab2_mane_amol")
setwd("~/Desktop/DS/524_lab2_ex5")
devtools::document()
library(roxygen2)
devtools::document()
devtools::install()
snow <- function(s, a, d, dens){
value <- list(snowfall = s, area = a, duration = d, density = dens)
# class can be set using class() or attr() function
attr(value, "class") <- "snow"
value
}
snow(2, 1, 4, .5)
depth.snow <- function(obj) {
return(snowfall*duration)
}
tets <- snow(2, 1, 4, .5)
tets.depth()
depth(tets)
depth.snow <- function(obj) {
return(snowfall*duration)
}
depth(tets)
tets <- snow(2, 1, 4, .5)
depth(tets)
depth.snow <- function(obj) {
return(snowfall*duration)
}
depth(tets)
print.student <- function(obj) {
cat(obj$name, "\n")
cat(obj$age, "years old\n")
cat("GPA:", obj$GPA, "\n")
}.depth()
tets.depth()
depth(tets)
depth <- function(obj) {
return(snowfall*duration)
}
depth(tets)
depth <- function(obj) {
return(obj.snowfall*obj.duration)
}
depth(tets)
depth <- function(obj) {
return(obj$snowfall * obj$duration)
}
depth(tets)
volume <- function(obj) {
return(depth(obj) * obj$area)
}
volume(tets)
weight <- function(obj) {
return(volume(obj) * obj$density)
}
weight(tets)
